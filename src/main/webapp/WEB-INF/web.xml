<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="3.1"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/beans.xml</param-value> <!-- ou .... -->
	</context-param>
	<listener> <!-- pour charger en mémoire les beans de spring au démarrage de l'appli dans tomcat -->
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>CXFServlet</servlet-name> <!-- gère WS soap et REST -->
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>  <!-- ou autre que services/* -->
	</servlet-mapping>
	
	<!-- NB: Dans cette appli de type TP , deux technologies concurrentes cohabitent
	     et sont utilisées pour coder des WS REST : CXF/JAX-RS et spring-MVC
	     Dans un vrai projet d'entreprise : on en choisit qu'une seule  -->
	
	<servlet>
 		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>
		 org.springframework.web.servlet.DispatcherServlet
 		</servlet-class>
		<init-param>
 			<param-name>contextConfigLocation</param-name>
 			<param-value></param-value>
 		</init-param>
		 <load-on-startup>1</load-on-startup>
 	</servlet>
 	<servlet-mapping>
 		<servlet-name>mvc-dispatcher</servlet-name>
		<url-pattern>/mvc/*</url-pattern>
	 </servlet-mapping>

</web-app>