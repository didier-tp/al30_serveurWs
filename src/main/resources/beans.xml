<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd 
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd                                
                        http://cxf.apache.org/jaxws 
                        http://cxf.apache.org/schemas/jaxws.xsd
                        http://cxf.apache.org/jaxrs 
                        http://cxf.apache.org/schemas/jaxrs.xsd">
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	 <!-- plus besoin de cxf-extension avec cxf 3 -->
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	
	
	<!-- NB: Dans cette appli de type TP , deux technologies concurrentes cohabitent
	     et sont utilisées pour coder des WS REST : CXF/JAX-RS et spring-MVC
	     Dans un vrai projet d'entreprise : on en choisit qu'une seule  -->
	 <mvc:annotation-driven /> <!-- pour config Spring-MVC sous forme d'annotation @RestController, @... -->
	<mvc:interceptors>
 		<bean class="fr.afcepf.al30.ws.rest.MyMvcInterceptor" />
	</mvc:interceptors>
	
	<bean class="fr.afcepf.spring4.config.MySwaggerConfig" />
	
	
	
	<import resource="jpaSpringConf.xml" />

	<context:annotation-config />
	<context:component-scan base-package="fr.afcepf.al30" /> 
	<!-- avec classes prefixées par @Service , @Component , @Repository , ... 
	     et injections prefixées par @Autowired -->
	     
	     
	<!--  implementor="#idServiceMetierSpringPrefixePar@Service" -->
	<jaxws:endpoint id="serviceTvaImplEndPoint" 
	     implementor="#serviceTvaImpl"
		address="/tva" />
	<!-- url complete : http://localhost:8080/ + serveurWs/ +services + /tva -->
	
	<jaxws:endpoint id="serviceDeviseImplEndPoint" 
	     implementor="#serviceDeviseImpl"
		address="/devise" />
		
	<!-- bean technique utilisé en interne pour convertir java en json et vice versa -->	
	<bean id='jacksonJsonProvider' class='com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider' />
		
	<jaxrs:server id="myRestServices" address="/rest">
	    <jaxrs:providers>
	        <ref bean="jacksonJsonProvider" /> <!-- referencement du fournisseur technique java/json -->
	    </jaxrs:providers>
	    <jaxrs:serviceBeans>
	      <ref bean="restServiceDevise" />
	      <!--  <ref bean="restServiceXy" /> -->
	   </jaxrs:serviceBeans>
	</jaxrs:server>	
		
</beans>